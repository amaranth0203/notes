
文件结构
[System]
[Ubuntu]
[shell]
[makefile]

[System]

declare 查看所有定义的函数 变量
declare -F 查看所有定义的函数
declare -f mm 查看函数 mm 的定义


netstat -aon | grep $(dig +short 150ou87340.iok.la) | grep -i established 
netstat -aon | grep $(dig +short 150ou87340.iok.la) | grep -i established &> /dev/null
ssh -N -f -o ServerAliveInterval=180 -R 12348:localhost:22 root@150ou87340.iok.la -p 2323 
ssh -i ~/.ssh/id_rsa -N -f -o ServerAliveInterval=180 -R 12348:localhost:22 root@150ou87340.iok.la -p 2323 
ssh -i ~/.ssh/id_rsa -N -f -o ServerAliveInterval=180 -R 12348:localhost:22 root@150ou87340.iok.la -p 2323 & 
ssh -i ~/.ssh/id_rsa -N -f -o ServerAliveInterval=180 -R 12348:localhost:22 root@150ou87340.iok.la -p 2323 & > /dev/null &
ssh liutao@localhost -p 12348
ps -elf | grep "150ou87340.iok.la"
kill -9 $(pidof sleep)
kill -9 $(pidof ssh)
~/myTemp/test 2
netstat -aon | grep 1234

使用 command &
如果有输出 会直接打印到终端
command &>/dev/null & 可以解决
但是 jobs 可以查看到
disown 之后 jobs 查看不到
例子 :
while sleep 1 ; do echo 'aaa' ; done &
disown
这个时候就会一直输出 aaa
job 也查不到
解决方法 :
kill $( pidof sleep )
( 因为 sleep 的 pid 每秒换一个新的 )

查看so文件的符号链接（函数名）
readelf -Ws xxx.so

查看dns
nm-tool
  如果/etc/resolv.conf不存在
  那么直接把dns添加到 /etc/network/interfaces下边 :
  auto eth0
  iface eth0 inet static
  address 192.168.137.44
  netmask 255.255.255.0
  dns-nameservers 114.114.114.114. 8.8.8.8
查看用户所属组
groups qiyunhu
添加用户到其他组
usermod -a -G sudo,adm,compiler qiyunhu
将用户从组删除
deluser qiyunhu sudo
deluser qiyunhu adm
deluser qiyunhu compiler

使用文件来扩展swap:
fallocate -l 4G /swapfile
chmod 600 /swapfile 
mkswap /swapfile 
swapon /swapfile 
vim_ /etc/fstab
    /swapfile none swap sw 0 0
reboot

当某个程序需要一个环境变量字符串的时候（比如开发安卓的eclipse需要ANDROID_SDK_HOME）
一定要在/etc/environment里边写 export ANDROID_SDK_HOME="......"
不能写在/etc/bash.bashrc不能写在~/.bashrc也不能用source 引其他写好的文件
（最好在配置之后重启然后试试echo $ANDROID_SDK_HOME 看看输出的结果是否理想

[Ubuntu]
update-rc.d -f INIT.D_NAME remove
禁止 INIT.d_NAME 自启动
要添加的话
update-rc.d -f INIT.D_NAME defaults <tab> <tab>
就可以看到要添加到的 runlevel 了 （可以先用 runlevel 命令查看当前 runlevel ）
也可以在上边命令的基础上添加 -n 选项，就可以看到实际执行的 ln 命令是怎么样的

启动的时候跳过grub选择
/etc/default/grub
    GRUB_RECORDFAIL_TIMEOUT=0
sudo update-grub


查看和Ubuntu版本相关的信息:
lsb_release -a

安装vmtool之后鼠标拖不出来 : apt-get install xserver-xorg-input-vmmouse

gsettings set org.gnome.desktop.session idle-delay <seconds> (0 to disable)
gsettings set org.gnome.desktop.screensaver lock-enabled false

/var/lib/AccountsService/users/XXX
设置

[User]
SystemAccount=true
能把该用户从登陆界面去除

登陆之后出现 stdin: is not a tty
把 /root/.profile 里边的 msg n 替换成
tty -s && mesg n

登陆之后没有任务栏，右键弹出终端后终端没有标题栏：
gsettings reset org.compiz.core:/org/compiz/profiles/unity/plugins/core/ active-plugins

apt-get install或aptitude install 不会自动补全的时候
修改/etc/bash.bashrc，去掉# enable bash completion in interactive shells后边代码段的注释

当目录下边的文件确实存在，但运行起来却说file or directore not exist的时候
很大可能是在64架构下运行了32位的可执行文件（可以使用 file exec_file_name 来查看）
解决方法：
dpkg --add-architecture i386
apt-get update
apt-get install libc6:386 libstdc++6:i386
之后再用 ldd exec_file_name 就可以看到所使用的库文件了

gsettings set com.canonical.desktop.interface scrollbar-mode normal		- 15.x
gsettings set org.gnome.desktop.interface ubuntu-overlay-scrollbars false	- 12.x ( non root user )
 - 禁用ubuntu鸡肋的滚动条

[shell]
#!/bin/sh -e
使用 -e 之后 一旦 $? 不为零
马上停止脚本
在脚本中可以使用
set -e 
和
set +e
来启动与关闭

C-s enables terminal scroll lock. Which prevents your terminal from scrolling (By sending an "XOFF" signal to pause the output of the software).
C-q disables the scroll lock. Resuming terminal scrolling (By sending an "XON" signal to resume the output of the software).
This feature is legacy (back from the 80's when terminals were very slow and did not allow scrolling) and is enabled by default.
To disable this feature you need the following in either ~/.bash_profile or ~/.bashrc:
stty -ixon
赋值的时候写一行
	str=aaa
不能写成
	str = aaa
	str= aaa
	str =aaa

echo ${0%/*} 可以获得脚本所在的目录（区别与pwd）

find 查找目录的时候使用
    find . -name "*vendor*" -type d

[makefile]
写 KVERS = $(shell uname -r)
的时候
不能写成   $( shell uname -r)

readlink -f .  能获取.的绝对路径
替换字符:
echo $PATH | tr ":" "\n"

代替xargs：
for x in `adb shell ls | grep init` ; do adb pull $x . ; done
删除目录下边所有文件但保留a.txt
   rm -rvf !(a.txt)
   ls | grep -v a.txt | xargs rm -rvf
删除文件名为 '-r' 的文件
   rm ./-r
   rm -- -r ( -- 后边全部作为字符串处理 )
ls -F 会出现很多的文件分类，如何查看具体是怎么分的：
   info ls

sed 是和vim的 s///g差不多
awk 是和cut差不多，分隔(使用-F）之后放到$1,$2里边
假设using_busybox里边全是命令,则使用
   awk          '{print  "alias ",$1,"=\"/system/xbin/",$1,"\""}' using_busybox的结果是
   alias  ls ="/system/xbin/ ls "（多出一个额外的空格）
   awk -vOFS='' '{print  "alias ",$1,"=\"/system/xbin/",$1,"\""}' using_busybox的结果是
   alias ls="/system/xbin/ls"（正解）
或者直接使用printf（熟悉的C语言！）
   awk '{printf "alias %s=\"/system/xbin/%s\"\n",$1,$1}' using_busybox