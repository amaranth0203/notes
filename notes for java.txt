内部类访问外部类成员的方法 : 
class Outer {
    private String s = "" ;
    class Inner {
        public void func( ) {
            Outer.this.s = "aaa" ;
        }
    }
}

原始编码		hex dump
(unicode)	utf-8
(内存中的样子）	(硬盘上的样子）
0000 - 007f	0xxxxxxx
0080 - 07ff	110xxxxx 10xxxxxx
0800 - ffff	1110xxxx 10xxxxxx 10xxxxxx
从而FileReader就能依据每一字节开头1的位数来判断之后
成功地按字(字符)（双字节）读取文件了

BufferedReader br =
    new BufferedReader(
        new InputStreamReader( System.in ) ) ;
String s = br.readLine( ) ;

tar -xvf ~/Downloads/jdk-7u3-linux-i586.tar.gz
sudo mkdir -p /usr/lib/jvm/jdk1.7.0
sudo mv jdk1.7.0_03/* /usr/lib/jvm/jdk1.7.0/
sudo update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/jdk1.7.0/bin/java" 1
sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/lib/jvm/jdk1.7.0/bin/javac" 1
sudo update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/lib/jvm/jdk1.7.0/bin/javaws" 1

JAVA_HOME=/usr/lib/jvm/jdk1.7.0
PATH=$PATH:$HOME/bin:$JAVA_HOME/bin
export JAVA_HOME
export JRE_HOME
export PATH

Java 不支持泛型数组，例如：
    LinkedList<String>[] al = new LinkedList<String>[2] ;
但是可以嵌套泛型，例如：
    LinkedList<LinkedList<String>> ll = new LinkedList<LinkedList<String>>() ;
接着要这样初始化和使用：
    ll.add( new LinkedList<String>() ) ;
    ll.get(0).add( "hello" ) ;
    System.out.println( ll.get(0).get(0) ) ;
