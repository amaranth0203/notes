

%s/\(.*case\(.*\):\n\)\(\_.\{-}break;\)/\1new_line_1\rnew_line_2\2new_line_3\rnew_line_4\r\3/g

在
case CASETAG :
    ...
    break ;
插入debug信息:
case CASETAG :
new_line_1
new_line_2 CASETAGnew_line3
new_line_4
    ...
    break ;
之后再替换成想要的
\_.代表 match any single character including newline
.*为贪婪匹配
.\{-}为非贪婪匹配


S+h / S+l : 光标跳到当前视图的第一行/最后一行的开始处
S+j : 把下一行开头的空格符全部删除，合并到这行最后边，中间再插入一个空格
S+k : 打开光标所在关键字的手册（于是vim是读linux代码最方便的工具）

S+y : 行复制,之后p的时候会直接另起一行
S+p : 行复制之后p在该行上边（类似S+o）
在没有进行行复制的时候，
    p   : 粘贴在方块光标的右边（类似A）
    S+p : 粘贴在方块光标的左边（类似I）


C+o 跳回到光标上一次所在
C+i / Tab 和C+o相反



正常模式下输入 q:
可以将准备要输入的命令放到编辑模式下编辑（就是可以粘贴要执行的命令或者命令里边有输不出来的特殊字符需要粘贴







快捷键：
shift + i	在行首插入
shift + a	在行尾追加
ctrl + e/w	下/上翻一行（连贯性最好）
e/b		相当于ctrl+右/左
%		跳到匹配的括号
	(ctrl + d/u	下/上翻半页)
	(ctrl + f/b	下/上翻一页)
shif + m	光标置于页中
	(zt		当前行移动到页首)
zz		当前行移动到页中
	(zb		当前行移动到页尾)
	(gg		相当于:1)
	(G		相当于:$)
$		行尾
^		行首（非空白）
0		行首
	(nG		相当于:n)
ctrl+g		显示当前行所在位置




set guifont=*	可以打开字体选择界面，之后再查看修改到配置文件里边

vim -b (以binary模式打开(看得到^M))

:write ++enc=utf-8 filename
 - 把filename的编码格式转换成utf-8（不加filename）转换当前文件